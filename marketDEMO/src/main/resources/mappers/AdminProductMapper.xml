<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.team3.admin_mapper.AdminProductMapper">

    <!-- PRODUCT_ITEM 매핑 -->
    <resultMap id="ProductItemMap" type="kr.co.team3.admin_dto.ProductItemDTO">
        <id     column="P_PID"             property="pPid"/>
        <result column="P_NAME"            property="name"/>
        <result column="P_DESC"            property="desc"/>
        <result column="P_PRICE"           property="price"/>
        <result column="P_DISCOUNT"        property="discount"/>
        <result column="P_POINT"           property="point"/>
        <result column="P_STOCK_QUANTITY"  property="stockQuantity"/>
        <result column="P_DELIVERY_PRICE"  property="deliveryPrice"/>
        <result column="P_SELLER_ID"       property="sellerId"/>
        <result column="P_PC_ID"           property="pcId"/>
        <!-- 스키마가 P_IAMGE_LIST로 정의돼 있으니 철자 그대로 사용 -->
        <result column="P_IAMGE_LIST"      property="imageList"/>
        <result column="P_IMAGE_MAIN"      property="imageMain"/>
        <result column="P_IMAGE_DETAIL"    property="imageDetail"/>
        <result column="P_DETAIL_INFO"     property="detailInfo"/>
        <result column="P_VIEW_COUNT"      property="viewCount"/>
    </resultMap>

    <!-- PRODUCT_ITEM INSERT (고정) -->
    <insert id="insertProductItem" parameterType="kr.co.team3.admin_dto.ProductItemDTO">
        INSERT INTO PRODUCT_ITEM (
            P_NAME, P_DESC, P_PRICE, P_DISCOUNT, P_POINT,
            P_STOCK_QUANTITY, P_DELIVERY_PRICE, P_SELLER_ID, P_PC_ID,
            P_IAMGE_LIST, P_IMAGE_MAIN, P_IMAGE_DETAIL, P_DETAIL_INFO, P_VIEW_COUNT
        )
        VALUES (
                   #{name}, #{desc}, #{price}, #{discount}, #{point},
                   #{stockQuantity}, #{deliveryPrice}, #{sellerId}, #{pcId},
                   #{imageList}, #{imageMain}, #{imageDetail}, #{detailInfo}, 0
               )
    </insert>

    <!-- PRODUCT_DETAIL INSERT (동적 INSERT: null/빈값 컬럼은 생략하여 DEFAULT 적용) -->
    <insert id="insertProductDetail" parameterType="kr.co.team3.admin_dto.ProductDetailDTO">
        INSERT INTO PRODUCT_DETAIL
        <trim prefix="(" suffix=")" suffixOverrides=",">
            PD_P_PID
            <if test="state != null and state != ''">, PD_STATE</if>
            <if test="tax != null and tax != ''">, PD_TAX</if>
            <if test="receipt != null and receipt != ''">, PD_RECEIPT</if>
            <if test="sellerType != null and sellerType != ''">, PD_S_SELLER_TYPE</if>
            <if test="brand != null and brand != ''">, PD_BRAND</if>
            <if test="origin != null and origin != ''">, PD_ORIGIN</if>
            <if test="maker != null and maker != ''">, PD_MAKER</if>
            <if test="country != null and country != ''">, PD_MANUF_COUNTRY</if>
            <if test="care != null and care != ''">, PD_CARE</if>
            <if test="manufDate != null and manufDate != ''">, PD_MANUF_DATE</if>
            <if test="warranty != null and warranty != ''">, PD_WARRANTY_INFO</if>
            <if test="asManager != null and asManager != ''">, PD_AS</if>
            <if test="phone != null and phone != ''">, PD_PHONE</if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{pPid}
            <if test="state != null and state != ''">, #{state}</if>
            <if test="tax != null and tax != ''">, #{tax}</if>
            <if test="receipt != null and receipt != ''">, #{receipt}</if>
            <if test="sellerType != null and sellerType != ''">, #{sellerType}</if>
            <if test="brand != null and brand != ''">, #{brand}</if>
            <if test="origin != null and origin != ''">, #{origin}</if>
            <if test="maker != null and maker != ''">, #{maker}</if>
            <if test="country != null and country != ''">, #{country}</if>
            <if test="care != null and care != ''">, #{care}</if>
            <if test="manufDate != null and manufDate != ''">, #{manufDate}</if>
            <if test="warranty != null and warranty != ''">, #{warranty}</if>
            <if test="asManager != null and asManager != ''">, #{asManager}</if>
            <if test="phone != null and phone != ''">, #{phone}</if>
        </trim>
    </insert>

    <!-- PRODUCT_OPTION INSERT (트리거가 POP_NO 생성 → 컬럼 생략) -->
    <insert id="insertProductOption" parameterType="kr.co.team3.admin_dto.ProductOptionDTO">
        INSERT INTO PRODUCT_OPTION (
            POP_P_PID, POP_NAME, POP_SELECTION, POP_ADD_PRICE, POP_STOCK
        )
        VALUES (
                   #{pPid}, #{name}, #{selection}, #{addPrice}, #{stock}
               )
    </insert>

    <!-- 단일 상품 조회 -->
    <select id="selectProductByPid" resultMap="ProductItemMap">
        SELECT * FROM PRODUCT_ITEM WHERE P_PID = #{pid}
    </select>

    <!-- 최근 생성된 PID (해당 판매자 기준 최신 등록일) -->
    <select id="selectLastPidBySeller" resultType="string">
        SELECT P_PID
        FROM PRODUCT_ITEM
        WHERE P_SELLER_ID = #{sellerId}
        ORDER BY P_REGDATE DESC
            FETCH FIRST 1 ROWS ONLY
    </select>

    <!-- 옵션 목록 조회 -->
    <select id="selectOptionsByPid" resultType="kr.co.team3.admin_dto.ProductOptionDTO">
        SELECT * FROM PRODUCT_OPTION WHERE POP_P_PID = #{pid}
    </select>


    <!-- DETAIL 단건 조회 (modify 폼 바인딩용) -->
    <select id="selectDetailByPid" resultType="kr.co.team3.admin_dto.ProductDetailDTO">
        SELECT
            PD_P_PID        AS pPid,
            PD_STATE        AS state,
            PD_TAX          AS tax,
            PD_RECEIPT      AS receipt,
            PD_S_SELLER_TYPE AS sellerType,
            PD_BRAND        AS brand,
            PD_ORIGIN       AS origin,
            PD_MAKER        AS maker,
            PD_MANUF_COUNTRY AS country,
            PD_CARE         AS care,
            PD_MANUF_DATE   AS manufDate,
            PD_WARRANTY_INFO AS warranty,
            PD_AS           AS asManager,
            PD_PHONE        AS phone
        FROM PRODUCT_DETAIL
        WHERE PD_P_PID = #{pid}
    </select>

    <!-- ⬇ITEM 업데이트 -->
    <update id="updateProductItem" parameterType="kr.co.team3.admin_dto.ProductItemDTO">
        UPDATE PRODUCT_ITEM
        SET
            P_NAME = #{name},
            P_DESC = #{desc},
            P_PRICE = #{price},
            P_DISCOUNT = #{discount},
            P_POINT = #{point},
            P_STOCK_QUANTITY = #{stockQuantity},
            P_DELIVERY_PRICE = #{deliveryPrice},
            P_PC_ID = #{pcId},
            P_IAMGE_LIST = #{imageList},
            P_IMAGE_MAIN = #{imageMain},
            P_IMAGE_DETAIL = #{imageDetail},
            P_DETAIL_INFO = #{detailInfo}
        WHERE P_PID = #{pPid}
    </update>

    <!-- DETAIL UPSERT (Oracle MERGE) -->
    <update id="upsertProductDetail" parameterType="kr.co.team3.admin_dto.ProductDetailDTO">
        MERGE INTO PRODUCT_DETAIL d
            USING (
                SELECT
                    #{pPid,       jdbcType=VARCHAR} AS pid,
                    #{state,      jdbcType=VARCHAR} AS st,
                    #{tax,        jdbcType=VARCHAR} AS tx,
                    #{receipt,    jdbcType=VARCHAR} AS rcpt,
                    #{sellerType, jdbcType=VARCHAR} AS sType,
                    #{brand,      jdbcType=VARCHAR} AS br,
                    #{origin,     jdbcType=VARCHAR} AS orgn,
                    #{maker,      jdbcType=VARCHAR} AS mkr,
                    #{country,    jdbcType=VARCHAR} AS ctry,
                    #{care,       jdbcType=VARCHAR} AS care,
                    #{manufDate,  jdbcType=VARCHAR} AS mdate,
                    #{warranty,   jdbcType=VARCHAR} AS warr,
                    #{asManager,  jdbcType=VARCHAR} AS asMgr,
                    #{phone,      jdbcType=VARCHAR} AS ph
                FROM dual
            ) s
            ON (d.PD_P_PID = s.pid)
            WHEN MATCHED THEN
                UPDATE SET
                    PD_STATE         = NVL(s.st,    d.PD_STATE),
                    PD_TAX           = NVL(s.tx,    d.PD_TAX),
                    PD_RECEIPT       = NVL(s.rcpt,  d.PD_RECEIPT),
                    PD_S_SELLER_TYPE = NVL(s.sType, d.PD_S_SELLER_TYPE),
                    PD_BRAND         = NVL(s.br,    d.PD_BRAND),
                    PD_ORIGIN        = NVL(s.orgn,  d.PD_ORIGIN),
                    PD_MAKER         = NVL(s.mkr,   d.PD_MAKER),
                    PD_MANUF_COUNTRY = NVL(s.ctry,  d.PD_MANUF_COUNTRY),
                    PD_CARE          = NVL(s.care,  d.PD_CARE),
                    PD_MANUF_DATE    = NVL(s.mdate, d.PD_MANUF_DATE),
                    PD_WARRANTY_INFO = NVL(s.warr,  d.PD_WARRANTY_INFO),
                    PD_AS            = NVL(s.asMgr, d.PD_AS),
                    PD_PHONE         = NVL(s.ph,    d.PD_PHONE)
            WHEN NOT MATCHED THEN
                INSERT (
                        PD_P_PID, PD_STATE, PD_TAX, PD_RECEIPT, PD_S_SELLER_TYPE,
                        PD_BRAND, PD_ORIGIN, PD_MAKER, PD_MANUF_COUNTRY, PD_CARE,
                        PD_MANUF_DATE, PD_WARRANTY_INFO, PD_AS, PD_PHONE
                    )
                    VALUES (
                               s.pid,
                               NVL(s.st,    '새상품'),
                               NVL(s.tx,    '과세상품'),
                               NVL(s.rcpt,  '발행가능신용카드전표, 온라인현금영수증'),
                               s.sType,
                               NVL(s.br,    '미입력'),
                               NVL(s.orgn,  '미입력'),
                               NVL(s.mkr,   '상세정보 직접입력'),
                               NVL(s.ctry,  '상세정보 직접입력'),
                               NVL(s.care,  '상세정보 직접입력'),
                               NVL(s.mdate, '상세정보 직접입력'),
                               NVL(s.warr,  '상세정보 직접입력'),
                               NVL(s.asMgr, '상세정보 직접입력'),
                               NVL(s.ph,    '상세정보 직접입력')
                           )
    </update>

    <!-- ⬇️ 옵션 전체 삭제 -->
    <delete id="deleteOptionsByPid">
        DELETE FROM PRODUCT_OPTION WHERE POP_P_PID = #{pid}
    </delete>

</mapper>
