<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.team3.admin_mapper.OrderStatusMapper">

    <!-- 공통 WHERE: searchType, keyword -->
    <sql id="searchWhere">
        <where>
            <if test="req.keyword != null and req.keyword != ''">
                <choose>
                    <when test="req.searchType == 'po_no'">
                        AND TO_CHAR(po.PO_NO) LIKE '%' || #{req.keyword} || '%'
                    </when>
                    <when test="req.searchType == 'u_id'">
                        AND LOWER(po.PO_U_ID) LIKE '%' || LOWER(#{req.keyword}) || '%'
                    </when>
                    <when test="req.searchType == 'u_name'">
                        AND LOWER(uu.U_NAME)  LIKE '%' || LOWER(#{req.keyword}) || '%'
                    </when>
                    <otherwise>
                        AND (
                        TO_CHAR(po.PO_NO)   LIKE '%' || #{req.keyword} || '%'
                        OR LOWER(po.PO_U_ID) LIKE '%' || LOWER(#{req.keyword}) || '%'
                        OR LOWER(uu.U_NAME)  LIKE '%' || LOWER(#{req.keyword}) || '%'
                        )
                    </otherwise>
                </choose>
            </if>

            <!-- 권한 필터 -->
            <if test="req.userType != null and req.userType != '관리자' and req.sellerId != null and req.sellerId != ''">
                AND EXISTS (
                SELECT 1
                FROM ORDER_ITEMS oi_f
                WHERE oi_f.OI_PO_NO = po.PO_NO
                AND oi_f.OI_S_U_ID = #{req.sellerId}
                )
            </if>
        </where>
    </sql>

    <!-- 결과 매핑 -->
    <resultMap id="OrderStatusMap" type="kr.co.team3.admin_dto.OrderStatusDTO">
        <result column="PO_NO"          property="poNo"/>
        <result column="PO_U_ID"        property="poUId"/>
        <result column="U_NAME"         property="uName"/>
        <result column="PO_ITEM_COUNT"  property="itemCount"/>
        <result column="PO_SUM_PRICE"   property="sumPrice"/>
        <result column="PO_PAY_TYPE"    property="payType"/>
        <result column="PO_STATE"       property="state"/>
        <result column="PO_ORDERDATE"   property="orderDate"/>
        <!-- 배송 상태 표시용 문자열: '입력완료' | '주문취소' | NULL -->
        <result column="SHIP_STATUS"    property="shipStatus"/>
    </resultMap>

    <!-- 목록: 최신 주문일 우선 (ROWNUM 페이징) -->
    <select id="selectOrderStatusPage"
            parameterType="kr.co.team3.admin_dto.PageRequestDTO"
            resultMap="OrderStatusMap">
        SELECT * FROM (
        SELECT inner_.*, ROWNUM AS rn
        FROM (
        SELECT
        po.PO_NO,
        po.PO_U_ID,
        uu.U_NAME,
        /* 주문 건수/합계는 테이블 컬럼이 있으면 사용, 없으면 서브쿼리 */
        po.PO_ITEM_COUNT,
        po.PO_SUM_PRICE,
        po.PO_PAY_TYPE,
        po.PO_STATE,
        CAST(po.PO_ORDERDATE AS TIMESTAMP) AS PO_ORDERDATE,

        /* 배송 상태 표기:
        - 하나라도 '배송중'/'배송완료' 있으면 '입력완료'
        - 아니고 '주문취소' 있으면 '주문취소'
        - 그 외 NULL */
        CASE
        WHEN EXISTS (
        SELECT 1 FROM ORDER_ITEMS oi
        WHERE oi.OI_PO_NO = po.PO_NO
        AND oi.OI_DEL_STATUS IN ('배송중','배송완료')
        ) THEN '입력완료'
        WHEN EXISTS (
        SELECT 1 FROM ORDER_ITEMS oi
        WHERE oi.OI_PO_NO = po.PO_NO
        AND oi.OI_DEL_STATUS = '주문취소'
        ) THEN '주문취소'
        ELSE NULL
        END AS SHIP_STATUS

        FROM PRODUCT_ORDER po
        JOIN U_USER uu ON uu.U_ID = po.PO_U_ID
        <include refid="searchWhere"/>

        ORDER BY po.PO_ORDERDATE DESC, po.PO_NO DESC
        ) inner_
        WHERE ROWNUM &lt;= #{req.offset} + #{req.size}
        )
        WHERE rn &gt; #{req.offset}
    </select>

    <!-- 총 건수: ORDER BY/OFFSET 절대 금지 -->
    <select id="countOrderStatus"
            parameterType="kr.co.team3.admin_dto.PageRequestDTO"
            resultType="int">
        SELECT COUNT(1)
        FROM PRODUCT_ORDER po
        JOIN U_USER uu ON uu.U_ID = po.PO_U_ID
        <include refid="searchWhere"/>
    </select>

    <!-- 자동 상태 갱신 규칙 -->
    <update id="updateToDelivered">
        UPDATE MARKET_DEV.ORDER_ITEMS oi
        SET oi.OI_DEL_STATUS = '배송완료'
        WHERE oi.OI_DEL_STATUS = '배송중'
          AND EXISTS (
            SELECT 1
            FROM MARKET_DEV.PRODUCT_ORDER po
            WHERE po.PO_NO = oi.OI_PO_NO
              AND po.PO_ORDERDATE &lt;= SYSDATE - 3
              AND NVL(po.PO_STATE, 'X') &lt;&gt; '주문취소'
        )
    </update>

    <!-- [1일 규칙] '배송준비' → 1일 경과 시 '배송중' -->
    <update id="updateToShipping">
        UPDATE MARKET_DEV.ORDER_ITEMS oi
        SET oi.OI_DEL_STATUS = '배송중'
        WHERE oi.OI_DEL_STATUS = '배송준비'
          AND EXISTS (
            SELECT 1
            FROM MARKET_DEV.PRODUCT_ORDER po
            WHERE po.PO_NO = oi.OI_PO_NO
              AND po.PO_ORDERDATE &lt;= SYSDATE - 1
              AND NVL(po.PO_STATE, 'X') &lt;&gt; '주문취소'
        )
    </update>

</mapper>
