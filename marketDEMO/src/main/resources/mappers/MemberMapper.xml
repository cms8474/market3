<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.team3.product_mapper.MemberMapper">

    <!-- 회원가입 - 모든 필드 포함 -->
    <insert id="insertMember" parameterType="kr.co.team3.product_entity.MemberEntity">
        INSERT INTO U_USER (
            U_ID, U_PW, U_NAME, U_BIRTH, U_GENDER, U_MAIL, U_PHONE, 
            U_POSTAL, U_BASE_ADDR, U_DETAIL_ADDR, U_TYPE, U_POINT, U_RANK, U_STATUS
        ) VALUES (
            #{uId}, #{uPw}, #{uName}, #{uBirth}, #{uGender}, #{uMail}, #{uPhone}, 
            #{uPostal}, #{uBaseAddr}, #{uDetailAddr}, #{uType}, #{uPoint}, #{uRank}, #{uStatus}
        )
    </insert>

    <!-- 아이디 중복 확인 -->
    <select id="countById" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM U_USER WHERE U_ID = #{uId}
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="countByMail" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM U_USER WHERE U_MAIL = #{uMail}
    </select>

    <!-- 로그인 -->
    <select id="findByuIdAnduPw" parameterType="map" resultType="kr.co.team3.product_entity.MemberEntity">
        SELECT * FROM U_USER WHERE U_ID = #{uId} AND U_PW = #{uPw}
    </select>

    <!-- 이메일로 회원 찾기 -->
    <select id="findByuMail" parameterType="String" resultType="kr.co.team3.product_entity.MemberEntity">
        SELECT * FROM U_USER WHERE U_MAIL = #{uMail}
    </select>

    <!-- 아이디로 회원 찾기 -->
    <select id="findByuId" parameterType="String" resultType="kr.co.team3.product_entity.MemberEntity">
        SELECT * FROM U_USER WHERE U_ID = #{uId}
    </select>

    <!-- 회원 정보 업데이트 -->
    <update id="updateMember" parameterType="kr.co.team3.product_entity.MemberEntity">
        UPDATE U_USER SET
            U_PW = #{uPw},
            U_NAME = #{uName},
            U_BIRTH = #{uBirth},
            U_GENDER = #{uGender},
            U_MAIL = #{uMail},
            U_PHONE = #{uPhone},
            U_POSTAL = #{uPostal},
            U_BASE_ADDR = #{uBaseAddr},
            U_DETAIL_ADDR = #{uDetailAddr},
            U_TYPE = #{uType},
            U_POINT = #{uPoint},
            U_RANK = #{uRank},
            U_STATUS = #{uStatus}
        WHERE U_ID = #{uId}
    </update>

    <!-- 판매자 정보 등록 -->
    <insert id="insertSellerInfo" parameterType="kr.co.team3.product_entity.SellerInfoEntity">
        INSERT INTO SELLER_INFO (
            S_U_ID, S_COMPANY_NAME, S_SELLER_NO, S_SALES_REG_NUM, 
            S_TEL, S_FAX, S_STATE, S_SELLER_TYPE
        ) VALUES (
            #{sUId}, #{sCompanyName}, #{sSellerNo}, #{sSalesRegNum}, 
            #{sTel}, #{sFax}, #{sState}, #{sSellerType}
        )
    </insert>

    <!-- 약관 내용 조회 -->
    <select id="getTermsContent" parameterType="String" resultType="String">
        SELECT T_BODY FROM M_TERMS WHERE T_NAME = #{termName}
    </select>

    <!--=========================================-->
    <!--관리자 회원목록 조회-->
    <!-- DTO 매핑 -->
    <resultMap id="MemberListMap" type="kr.co.team3.product_dto.MemberDTO">
        <result property="u_id"          column="U_ID"/>
        <result property="u_name"        column="U_NAME"/>
        <result property="u_gender"      column="U_GENDER"/>
        <result property="u_rank"        column="U_RANK"/>
        <result property="u_point"       column="U_POINT"      javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="u_mail"        column="U_MAIL"/>
        <result property="u_phone"       column="U_PHONE"/>
        <!-- 날짜/시간 매핑 명시 (Oracle) -->
        <result property="u_create_day"  column="U_CREATE_DAY" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="u_status"      column="U_STATUS"/>
    </resultMap>

    <!--아이디 이름 메일 휴대폰 검색-->
    <sql id="searchWhere">
        <where>
            U_TYPE = '일반'
            <if test="pageRequestDTO.searchType != null
        and pageRequestDTO.keyword != ''">
                <choose>
                    <when test="pageRequestDTO.searchType == 'u_id'">
                        AND U_ID LIKE '%' || #{pageRequestDTO.keyword} || '%'
                    </when>
                    <when test="pageRequestDTO.searchType == 'u_name'">
                        AND U_NAME LIKE '%' || #{pageRequestDTO.keyword} || '%'
                    </when>
                    <when test="pageRequestDTO.searchType == 'u_mail'">
                        AND U_MAIL LIKE '%' || #{pageRequestDTO.keyword} || '%'
                    </when>
                    <when test="pageRequestDTO.searchType == 'u_phone'">
                        AND U_PHONE LIKE '%' || #{pageRequestDTO.keyword} || '%'
                    </when>
                </choose>
            </if>
        </where>
    </sql>

    <select id="selectMemberList"
            parameterType="kr.co.team3.admin_dto.PageRequestDTO"
            resultMap="MemberListMap">
        SELECT
        U_ID, U_NAME, U_GENDER, U_RANK, U_POINT,
        U_MAIL, U_PHONE, U_CREATE_DAY, U_STATUS
        FROM U_USER
        <include refid="searchWhere"/>
        ORDER BY U_CREATE_DAY DESC, U_ID DESC
        OFFSET #{pageRequestDTO.offset} ROWS
        FETCH NEXT #{pageRequestDTO.size} ROWS ONLY
    </select>

    <select id="selectCountTotal"
            parameterType="kr.co.team3.admin_dto.PageRequestDTO"
            resultType="int">
        SELECT COUNT(*)
        FROM U_USER
        <include refid="searchWhere"/>
    </select>

    <!--멤버 엄데이트 -->
    <resultMap id="MemberMap" type="kr.co.team3.product_dto.MemberDTO">
        <id     column="U_ID"             property="u_id"/>
        <result column="U_NAME"           property="u_name"/>
        <result column="U_GENDER"         property="u_gender"/>
        <result column="U_RANK"           property="u_rank"/>
        <result column="U_STATUS"         property="u_status"/>
        <result column="U_MAIL"           property="u_mail"/>
        <result column="U_PHONE"          property="u_phone"/>
        <result column="U_POSTAL"         property="u_postal"/>
        <result column="U_BASE_ADDR"      property="u_base_addr"/>
        <result column="U_DETAIL_ADDR"    property="u_detail_addr"/>
        <result column="U_CREATE_DAY"     property="u_create_day"     javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result column="U_LAST_LOGIN_AT"  property="u_last_login_at"  javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- 관리자 회원 단건 수정 -->

    <select id="selectMemberById"
            parameterType="string"
            resultMap="MemberMap">
        SELECT
            U_ID,
            U_NAME,
            U_GENDER,
            U_RANK,
            U_STATUS,
            U_MAIL,
            U_PHONE,
            U_POSTAL,
            U_BASE_ADDR,
            U_DETAIL_ADDR,
            U_CREATE_DAY,
            U_LAST_LOGIN_AT
        FROM U_USER
        WHERE U_ID = #{u_id}
    </select>

    <update id="updateMemberProfile"
            parameterType="kr.co.team3.product_dto.MemberDTO">
        <![CDATA[
        UPDATE U_USER
        SET
            U_NAME        = #{u_name},
            U_GENDER      = #{u_gender},
            U_MAIL        = #{u_mail},
            U_PHONE       = #{u_phone},
            U_POSTAL      = #{u_postal},
            U_BASE_ADDR   = #{u_base_addr},
            U_DETAIL_ADDR = #{u_detail_addr}
        WHERE U_ID = #{u_id}
          AND U_STATUS <> '탈퇴'
        ]]>
    </update>



    <!--상태 업데이트용 -->
    <resultMap id="MemberMapSimple" type="kr.co.team3.product_dto.MemberDTO">
        <id     property="u_id"            column="U_ID"/>
        <result property="u_status"        column="U_STATUS"/>
    </resultMap>

    <!-- 상태: 정상 → 중지 -->
    <update id="updateStatusToStop" parameterType="string">
        UPDATE U_USER
        SET U_STATUS = '중지'
        WHERE U_ID = #{u_id}
          AND U_STATUS &lt;&gt; '탈퇴'
    </update>

    <!-- 상태: 중지/휴면 → 정상 -->
    <update id="updateStatusToActive" parameterType="string">
        UPDATE U_USER
        SET U_STATUS = '정상'
        WHERE U_ID = #{u_id}
          AND U_STATUS IN ('중지','휴면')
    </update>

    <!-- 비활성(개인정보 파기) -->
    <update id="deactivateMember" parameterType="string">
        UPDATE U_USER
        SET U_STATUS        = '비활성',
            U_NAME          = '(삭제됨)',   -- NOT NULL
            U_PW            = '(삭제됨)',   -- NOT NULL
            U_GENDER        = NULL,
            U_MAIL          = NULL,
            U_PHONE         = NULL,
            U_RANK          = NULL,
            U_POINT         = NULL,
            U_POSTAL        = NULL,
            U_BASE_ADDR     = NULL,
            U_DETAIL_ADDR   = NULL,
            U_BIRTH         = NULL,
            U_LAST_LOGIN_AT = NULL,
            U_CREATE_DAY    = NULL
        WHERE U_ID = #{u_id}
          AND TRIM(U_STATUS) = '탈퇴'
    </update>



    <!-- 배치: 3개월 이상 미로그인 → 휴면 -->
    <update id="makeDormantOver90Days">
        UPDATE U_USER
        SET U_STATUS = '휴면'
        WHERE U_STATUS = '정상'
          AND (
            (U_LAST_LOGIN_AT IS NULL AND U_CREATE_DAY     &lt;= SYSTIMESTAMP - INTERVAL '90' DAY)
                OR (U_LAST_LOGIN_AT            &lt;= SYSTIMESTAMP - INTERVAL '90' DAY)
            )
    </update>


    <!-- 선택 등급 선택수정 -->
    <update id="bulkUpdateRanks">
        UPDATE U_USER
        SET U_RANK = CASE U_ID
        <foreach collection="list" item="m">
            WHEN #{m.u_id} THEN #{m.u_rank}
        </foreach>
        END
        WHERE U_ID IN
        <foreach collection="list" item="m" open="(" separator="," close=")">
            #{m.u_id}
        </foreach>
        AND TRIM(U_STATUS) NOT IN ('탈퇴','비활성')
    </update>


</mapper>

